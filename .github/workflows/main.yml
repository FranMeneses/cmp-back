name: Deploy to Azure Container Apps

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  CONTAINER_APP_NAME: ${{ secrets.CONTAINER_APP_NAME }}
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Build
      run: npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login into ACR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

    - name: Build and push container image into ACR
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/cmp-back:latest
        file: Dockerfile

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/cmp-back:latest
        resourceGroup: ${{ env.RESOURCE_GROUP }}
        containerAppName: ${{ env.CONTAINER_APP_NAME }}
        environment_variables: |
          NODE_ENV=production
          PORT=4000
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          AZURE_STORAGE_SAS_TOKEN=${{ secrets.AZURE_STORAGE_SAS_TOKEN }}