# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Beneficiary {
  address: String
  contacts: [Contact!]
  entityType: String
  hasLegalPersonality: Boolean
  id: ID!
  legalName: String
  representative: String
  rut: String
  subtasks: [Subtask!]
}

type Compliance {
  applies: Boolean!
  id: ID!
  statusId: Int!
  subtaskId: ID!
}

type Contact {
  beneficiary: Beneficiary
  email: String
  id: ID!
  name: String
  phone: String
  position: String
}

input CreateBeneficiaryDto {
  address: String
  entityType: String
  hasLegalPersonality: Boolean
  legalName: String
  representative: String
  rut: String
}

input CreateComplianceDto {
  aplica: Int!
  id_cumplimiento_estado: Int!
  id_subtarea: Int!
}

input CreateContactDto {
  beneficiaryId: ID!
  email: String
  name: String
  phone: String
  position: String
}

input CreateInfoTaskInput {
  interactionId: Int!
  investmentId: Int!
  originId: Int!
  riskId: Int!
  scopeId: Int!
  taskId: ID!
  typeId: Int!
}

input CreateSubtaskDto {
  beneficiaryId: ID
  budget: Int
  description: String
  endDate: DateTime
  expense: Int
  finalDate: DateTime
  name: String
  number: Int
  priorityId: Int
  startDate: DateTime
  statusId: Int
  taskId: ID!
}

input CreateTaskDto {
  description: String
  faenaId: Int
  name: String
  statusId: Int
  valleyId: Int
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Faena {
  id: Int!
  name: String
}

type InfoTask {
  id: ID!
  interactionId: Int!
  investmentId: Int!
  originId: Int!
  riskId: Int!
  scopeId: Int!
  task: Task
  taskId: ID!
  typeId: Int!
}

type Mutation {
  createBeneficiary(input: CreateBeneficiaryDto!): Beneficiary!
  createCompliance(input: CreateComplianceDto!): Compliance!
  createContact(input: CreateContactDto!): Contact!
  createInfoTask(createInfoTaskInput: CreateInfoTaskInput!): InfoTask!
  createSubtask(input: CreateSubtaskDto!): Subtask!
  createTask(input: CreateTaskDto!): Task!
  removeBeneficiary(id: ID!): Beneficiary!
  removeCompliance(id: ID!): Compliance!
  removeContact(id: ID!): Contact!
  removeInfoTask(id: ID!): InfoTask!
  removeSubtask(id: ID!): Subtask!
  removeTask(id: ID!): Task!
  updateBeneficiary(id: ID!, input: UpdateBeneficiaryDto!): Beneficiary!
  updateCompliance(id: ID!, input: UpdateComplianceDto!): Compliance!
  updateContact(id: ID!, input: UpdateContactDto!): Contact!
  updateInfoTask(id: ID!, updateInfoTaskInput: UpdateInfoTaskInput!): InfoTask!
  updateSubtask(id: ID!, input: UpdateSubtaskDto!): Subtask!
  updateTask(id: ID!, input: UpdateTaskDto!): Task!
}

type Priority {
  id: Int!
  name: String
}

type Query {
  beneficiaries: [Beneficiary!]!
  beneficiary(id: ID!): Beneficiary!
  compliance(id: ID!): Compliance!
  compliances(query: String): [Compliance!]!
  contact(id: ID!): Contact!
  contacts: [Contact!]!
  infoTask(id: ID!): InfoTask!
  infoTasks: [InfoTask!]!
  subtask(id: ID!): Subtask!
  subtasks: [Subtask!]!
  task(id: ID!): Task!
  taskInfo(id: ID!): InfoTask!
  taskProgress(id: ID!): Float!
  taskSubtasks(id: ID!): [Subtask!]!
  taskTotalBudget(id: ID!): Float!
  taskTotalExpense(id: ID!): Float!
  tasks: [Task!]!
  valleySubtasks(valleyId: Int!): [Subtask!]!
  valleyTasksCount(valleyId: Int!): Int!
}

type Subtask {
  beneficiary: Beneficiary
  beneficiaryId: ID
  budget: Int
  description: String
  endDate: DateTime
  expense: Int
  finalDate: DateTime
  id: ID!
  name: String
  number: Int
  priority: Priority
  priorityId: Int
  startDate: DateTime
  status: SubtaskStatus
  statusId: Int
  taskId: ID!
}

type SubtaskStatus {
  id: Int!
  name: String
  percentage: Int!
}

type Task {
  description: String
  faena: Faena
  faenaId: Int
  id: ID!
  name: String
  status: TaskStatus
  statusId: Int
  subtasks: [Subtask!]
  valley: Valley
  valleyId: Int
}

type TaskStatus {
  id: Int!
  name: String
}

input UpdateBeneficiaryDto {
  address: String
  entityType: String
  hasLegalPersonality: Boolean
  legalName: String
  representative: String
  rut: String
}

input UpdateComplianceDto {
  aplica: Int
  id_cumplimiento_estado: Int
  id_subtarea: Int
}

input UpdateContactDto {
  beneficiaryId: ID
  email: String
  name: String
  phone: String
  position: String
}

input UpdateInfoTaskInput {
  interactionId: Int
  investmentId: Int
  originId: Int
  riskId: Int
  scopeId: Int
  taskId: ID
  typeId: Int
}

input UpdateSubtaskDto {
  beneficiaryId: ID
  budget: Int
  description: String
  endDate: DateTime
  expense: Int
  finalDate: DateTime
  name: String
  number: Int
  priorityId: Int
  startDate: DateTime
  statusId: Int
  taskId: ID
}

input UpdateTaskDto {
  description: String
  faenaId: Int
  name: String
  statusId: Int
  valleyId: Int
}

type Valley {
  id: Int!
  name: String
}