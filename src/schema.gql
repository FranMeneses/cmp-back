# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Beneficiary {
  address: String!
  entityType: String!
  hasLegalPersonality: Boolean!
  id: ID!
  legalName: String!
  representative: String!
  rut: String!
}

type Compliance {
  applies: Boolean!
  id: ID!
  statusId: Int!
  subtaskId: ID!
}

input CreateBeneficiaryDto {
  direccion: String!
  nombre_legal: String!
  personalidad_juridica: Float!
  representante: String!
  rut: String!
  tipo_entidad: String!
}

input CreateComplianceDto {
  aplica: Int!
  id_cumplimiento_estado: Int!
  id_subtarea: Int!
}

input CreateSubtaskDto {
  descripcion: String
  fecha_final: DateTime
  fecha_inicio: DateTime
  fecha_termino: DateTime
  gasto: Int
  id_beneficiario: Int
  id_estado: Int
  id_prioridad: Int
  id_tarea: String
  nombre: String
  numero: Int!
  presupuesto: Int
}

input CreateTaskDto {
  descripcion: String
  id_estado: Int
  id_faena: Int!
  id_valle: Int!
  nombre: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createBeneficiary(input: CreateBeneficiaryDto!): Beneficiary!
  createCompliance(input: CreateComplianceDto!): Compliance!
  createSubtask(input: CreateSubtaskDto!): Subtask!
  createTask(input: CreateTaskDto!): Task!
  removeBeneficiary(id: ID!): Beneficiary!
  removeCompliance(id: ID!): Compliance!
  removeSubtask(id: ID!): Subtask!
  removeTask(id: ID!): Task!
  updateBeneficiary(id: ID!, input: UpdateBeneficiaryDto!): Beneficiary!
  updateCompliance(id: ID!, input: UpdateComplianceDto!): Compliance!
  updateSubtask(id: ID!, input: UpdateSubtaskDto!): Subtask!
  updateTask(id: ID!, input: UpdateTaskDto!): Task!
}

type Query {
  beneficiaries(query: String): [Beneficiary!]!
  beneficiary(id: ID!): Beneficiary!
  compliance(id: ID!): Compliance!
  compliances(query: String): [Compliance!]!
  subtask(id: ID!): Subtask!
  subtasks(query: String): [Subtask!]!
  task(id: ID!): Task!
  taskProgress(id: ID!): Float!
  taskSubtasks(id: ID!): [Task!]!
  taskTotalBudget(id: ID!): Float!
  taskTotalExpense(id: ID!): Float!
  tasks(query: String): [Task!]!
}

type Subtask {
  beneficiaryId: ID!
  budget: Float!
  description: String!
  endDate: DateTime!
  expense: Float!
  finalDate: DateTime!
  id: ID!
  name: String!
  number: Int!
  priorityId: Int!
  startDate: DateTime!
  statusId: Int!
  taskId: ID!
}

type Task {
  budget: Float
  description: String
  endDate: DateTime
  expense: Float
  faena: Int
  finalDate: DateTime
  id: ID!
  name: String!
  priority: Int
  startDate: DateTime
  status: Int!
  valley: Int
}

input UpdateBeneficiaryDto {
  direccion: String
  nombre_legal: String
  personalidad_juridica: Int
  representante: String
  rut: String
  tipo_entidad: String
}

input UpdateComplianceDto {
  aplica: Int
  id_cumplimiento_estado: Int
  id_subtarea: Int
}

input UpdateSubtaskDto {
  descripcion: String
  fecha_final: String
  fecha_inicio: String
  fecha_termino: String
  gasto: Int
  id_beneficiario: Int
  id_estado: Int
  id_prioridad: Int
  id_tarea: Int
  nombre: String
  presupuesto: Int
}

input UpdateTaskDto {
  descripcion: String
  id_estado: Int
  id_faena: Int
  id_valle: Int
  nombre: String
}